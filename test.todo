I am creating a web app that generates fake data for testing and devlopement purposes. The user can create a schema of the model of data that they need and my app generates bunch of data based on that schema. It is like faker api but here the user can define the schema, get as much data as they want, can specify the types of data they want. create a react-tailwind homepage for this website with topbar and footer. make it modern and minimalistic. include typewriter effect in homepage so give me bunch of lines, words that can be iterated through. include the typewriter "Define. Generate. Iterate." this as the fixed part and ""Fake user data..", 
 "Mock database in seconds..", "10,000 users in 2 clicks..", "Data of customized schema.."," these as changing phrases. also  include these lines -" Speed up development with dynamic test data. ","No more hard coded data, just mock it like a pro. ","  Design your schema & Get instant test data. ". The whole page should be of the same dark color including the header and footer.  the buttons to not have any color but borders. The text and button border color should be bright mixed diffused of many colors. The homepage should be of single page. Except for the footer and topbar the page should be divided into two sections. Design beautifully. Also change the text color into some different mix of  variants red-yellow-orange. 





// import { useEffect, useState } from "react";

// const phrases = [
//   "Fake user data...",
//   "Mock database in seconds...",
//   "10,000 users in 2 clicks...",
//   "Data of customized schema...",
// ];

// function App() {
//   const [darkMode, setDarkMode] = useState(
//     localStorage.getItem("theme") === "dark"
//   );
//   const [phraseIndex, setPhraseIndex] = useState(0);
//   const [displayText, setDisplayText] = useState("");

//   // Handle dark mode toggle
//   useEffect(() => {
//     document.documentElement.classList.toggle("dark", darkMode);
//     localStorage.setItem("theme", darkMode ? "dark" : "light");
//   }, [darkMode]);

//   // Typewriter effect
//   useEffect(() => {
//     let currentPhrase = phrases[phraseIndex];
//     let currentIndex = 0;

//     const type = () => {
//       if (currentIndex <= currentPhrase.length) {
//         setDisplayText(currentPhrase.substring(0, currentIndex));
//         currentIndex++;
//         setTimeout(type, 70);
//       } else {
//         setTimeout(() => {
//           setPhraseIndex((prev) => (prev + 1) % phrases.length);
//         }, 1500);
//       }
//     };

//     type();
//   }, [phraseIndex]);

//   return (
//     <div className="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 min-h-screen flex flex-col">
//       <header className="px-6 py-4 flex justify-between items-center border-b border-gray-200 dark:border-gray-700">
//         <h1 className="text-xl font-bold">MockMint</h1>
//         <button
//           onClick={() => setDarkMode(!darkMode)}
//           className="text-sm border px-3 py-1 rounded dark:border-gray-600"
//         >
//           {darkMode ? "Light Mode" : "Dark Mode"}
//         </button>
//       </header>

//       <main className="flex-1 flex items-center justify-center text-center px-4">
//         <div>
//           <h2 className="text-3xl md:text-5xl font-semibold mb-2">
//             Define. Generate. Iterate.
//           </h2>
//           <p className="text-blue-500 dark:text-blue-400 text-xl h-8 md:h-10 font-mono transition-all">
//             {displayText}
//           </p>

//           <div className="mt-6 space-y-2 text-lg max-w-xl mx-auto text-gray-700 dark:text-gray-300">
//             <p>Speed up development with dynamic test data.</p>
//             <p>No more hardcoded data, just mock it like a pro.</p>
//             <p>Design your schema & Get instant test data.</p>
//           </div>

//           <div className="mt-8 space-x-4">
//             <button className="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700">
//               Get Started
//             </button>
//             <button className="border px-6 py-2 rounded border-gray-400 dark:border-gray-600">
//               Learn More
//             </button>
//           </div>
//         </div>
//       </main>

//       <footer className="text-center py-6 text-sm border-t border-gray-200 dark:border-gray-700">
//         © 2025 MockMint — Generate fake data effortlessly.
//       </footer>
//     </div>
//   );
// }

// export default App;



// import React, { useState, useEffect } from 'react';

// const FAUXDB_Homepage = () => {
//   const [currentPhrase, setCurrentPhrase] = useState(0);
//   const [displayText, setDisplayText] = useState('');
//   const [isDeleting, setIsDeleting] = useState(false);
  
//   const phrases = [
//     "Fake user data..",
//     "Mock database in seconds..",
//     "10,000 users in 2 clicks..",
//     "Data of customized schema.."
//   ];

//   useEffect(() => {
//     const typeSpeed = isDeleting ? 50 : 100;
//     const phrase = phrases[currentPhrase];
    
//     const timer = setTimeout(() => {
//       if (!isDeleting && displayText === phrase) {
//         setTimeout(() => setIsDeleting(true), 1500);
//       } else if (isDeleting && displayText === '') {
//         setIsDeleting(false);
//         setCurrentPhrase((prev) => (prev + 1) % phrases.length);
//       } else if (isDeleting) {
//         setDisplayText(phrase.substring(0, displayText.length - 1));
//       } else {
//         setDisplayText(phrase.substring(0, displayText.length + 1));
//       }
//     }, typeSpeed);

//     return () => clearTimeout(timer);
//   }, [displayText, isDeleting, currentPhrase, phrases]);

//   return (
//     <div className="min-h-screen bg-gray-900 text-white">
//       {/* Header */}
//       <header className="bg-gray-900 border-b border-gray-800">
//         <nav className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
//           <div className="flex justify-between items-center py-4">
//             <div className="flex items-center">
//               <h1 className="text-2xl font-bold bg-gradient-to-r from-red-400 via-yellow-400 to-orange-400 bg-clip-text text-transparent">
//                 FAUXDB
//               </h1>
//             </div>
//             <div className="hidden md:flex space-x-8">
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Features
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Documentation
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Pricing
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Contact
//               </a>
//             </div>
//             <div className="flex space-x-4">
//               <button className="px-4 py-2 border border-gradient-to-r from-red-400 via-yellow-400 to-orange-400 rounded-lg text-gray-300 hover:text-white transition-colors border-orange-400">
//                 Sign In
//               </button>
//               <button className="px-4 py-2 border border-gradient-to-r from-red-400 via-yellow-400 to-orange-400 rounded-lg text-gray-300 hover:text-white transition-colors border-red-400">
//                 Get Started
//               </button>
//             </div>
//           </div>
//         </nav>
//       </header>

//       {/* Main Content */}
//       <main className="flex-1">
//         {/* Hero Section */}
//         <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
//           <div className="text-center">
//             <h1 className="text-5xl md:text-7xl font-bold mb-8">
//               <span className="bg-gradient-to-r from-red-400 via-yellow-400 to-orange-400 bg-clip-text text-transparent">
//                 Define. Generate. Iterate.
//               </span>
//             </h1>
            
//             <div className="text-2xl md:text-3xl mb-8 h-12 flex items-center justify-center">
//               <span className="bg-gradient-to-r from-orange-400 via-red-400 to-yellow-400 bg-clip-text text-transparent">
//                 {displayText}
//                 <span className="animate-pulse">|</span>
//               </span>
//             </div>
            
//             <div className="space-y-4 mb-12 max-w-3xl mx-auto">
//               <p className="text-xl bg-gradient-to-r from-red-300 via-yellow-300 to-orange-300 bg-clip-text text-transparent">
//                 Speed up development with dynamic test data.
//               </p>
//               <p className="text-xl bg-gradient-to-r from-orange-300 via-red-300 to-yellow-300 bg-clip-text text-transparent">
//                 No more hard coded data, just mock it like a pro.
//               </p>
//               <p className="text-xl bg-gradient-to-r from-yellow-300 via-orange-300 to-red-300 bg-clip-text text-transparent">
//                 Design your schema & Get instant test data.
//               </p>
//             </div>
            
//             <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
//               <button className="px-8 py-4 border-2 border-red-400 rounded-lg text-lg font-semibold bg-gradient-to-r from-red-400 via-yellow-400 to-orange-400 bg-clip-text text-transparent hover:bg-gray-800 transition-all duration-300 transform hover:scale-105">
//                 Start Generating Data
//               </button>
//               <button className="px-8 py-4 border-2 border-orange-400 rounded-lg text-lg font-semibold bg-gradient-to-r from-orange-400 via-red-400 to-yellow-400 bg-clip-text text-transparent hover:bg-gray-800 transition-all duration-300 transform hover:scale-105">
//                 View Documentation
//               </button>
//             </div>
//           </div>
//         </section>

//         {/* Features Section */}
//         <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 border-t border-gray-800">
//           <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
//             <div className="text-center p-6 rounded-lg border border-gray-800 hover:border-red-400 transition-colors">
//               <div className="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-red-400 to-orange-400 flex items-center justify-center">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
//                 </svg>
//               </div>
//               <h3 className="text-xl font-semibold mb-3 bg-gradient-to-r from-red-400 to-orange-400 bg-clip-text text-transparent">
//                 Custom Schema
//               </h3>
//               <p className="text-gray-400">
//                 Define your own data structure with flexible schema configuration
//               </p>
//             </div>

//             <div className="text-center p-6 rounded-lg border border-gray-800 hover:border-yellow-400 transition-colors">
//               <div className="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-yellow-400 to-red-400 flex items-center justify-center">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
//                 </svg>
//               </div>
//               <h3 className="text-xl font-semibold mb-3 bg-gradient-to-r from-yellow-400 to-red-400 bg-clip-text text-transparent">
//                 Lightning Fast
//               </h3>
//               <p className="text-gray-400">
//                 Generate thousands of records in seconds with optimized algorithms
//               </p>
//             </div>

//             <div className="text-center p-6 rounded-lg border border-gray-800 hover:border-orange-400 transition-colors">
//               <div className="w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r from-orange-400 to-yellow-400 flex items-center justify-center">
//                 <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                   <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
//                 </svg>
//               </div>
//               <h3 className="text-xl font-semibold mb-3 bg-gradient-to-r from-orange-400 to-yellow-400 bg-clip-text text-transparent">
//                 Developer Friendly
//               </h3>
//               <p className="text-gray-400">
//                 Easy API integration with comprehensive documentation and examples
//               </p>
//             </div>
//           </div>
//         </section>
//       </main>

//       {/* Footer */}
//       <footer className="bg-gray-900 border-t border-gray-800 mt-20">
//         <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
//           <div className="grid md:grid-cols-4 gap-8">
//             <div>
//               <h3 className="text-lg font-semibold mb-4 bg-gradient-to-r from-red-400 via-yellow-400 to-orange-400 bg-clip-text text-transparent">
//                 FAUXDB
//               </h3>
//               <p className="text-gray-400">
//                 The ultimate fake data generator for developers who need realistic test data.
//               </p>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Product</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Features</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Pricing</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">API Reference</a></li>
//               </ul>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Support</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Documentation</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Guides</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Contact</a></li>
//               </ul>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Company</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">About</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Blog</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-white transition-colors">Privacy</a></li>
//               </ul>
//             </div>
//           </div>
          
//           <div className="border-t border-gray-800 mt-8 pt-8 text-center">
//             <p className="text-gray-400">
//               © 2025 FAUXDB. All rights reserved.
//             </p>
//           </div>
//         </div>
//       </footer>
//     </div>
//   );
// };

// export default FAUXDB_Homepage;



// import React, { useState, useEffect } from 'react';

// const FAUXDB_Homepage = () => {
//   const [currentPhrase, setCurrentPhrase] = useState(0);
//   const [displayText, setDisplayText] = useState('');
//   const [isDeleting, setIsDeleting] = useState(false);
  
//   const phrases = [
//     "Fake user data..",
//     "Mock database in seconds..",
//     "10,000 users in 2 clicks..",
//     "Data of customized schema.."
//   ];

//   useEffect(() => {
//     const typeSpeed = isDeleting ? 50 : 100;
//     const phrase = phrases[currentPhrase];
    
//     const timer = setTimeout(() => {
//       if (!isDeleting && displayText === phrase) {
//         setTimeout(() => setIsDeleting(true), 1500);
//       } else if (isDeleting && displayText === '') {
//         setIsDeleting(false);
//         setCurrentPhrase((prev) => (prev + 1) % phrases.length);
//       } else if (isDeleting) {
//         setDisplayText(phrase.substring(0, displayText.length - 1));
//       } else {
//         setDisplayText(phrase.substring(0, displayText.length + 1));
//       }
//     }, typeSpeed);

//     return () => clearTimeout(timer);
//   }, [displayText, isDeleting, currentPhrase, phrases]);

//   return (
//     <div className="min-h-screen bg-gray-900 text-white flex flex-col">
//       {/* Header */}
//       <header className="bg-gray-900 border-b border-gray-800">
//         <nav className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
//           <div className="flex justify-between items-center py-4">
//             <div className="flex items-center">
//               <h1 className="text-2xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
//                 FAUXDB
//               </h1>
//             </div>
//             <div className="hidden md:flex space-x-8">
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Features
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Documentation
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Pricing
//               </a>
//               <a href="#" className="text-gray-300 hover:text-white transition-colors">
//                 Contact
//               </a>
//             </div>
//             <div className="flex space-x-4">
//               <button className="px-4 py-2 border border-cyan-400 rounded-lg text-gray-300 hover:text-white transition-colors">
//                 Sign In
//               </button>
//               <button className="px-4 py-2 border border-purple-400 rounded-lg text-gray-300 hover:text-white transition-colors">
//                 Get Started
//               </button>
//             </div>
//           </div>
//         </nav>
//       </header>

//       {/* Main Content - Two Sections Side by Side */}
//       <main className="flex-1 flex">
//         {/* Left Section - Typewriter */}
//         <section className="w-1/2 flex items-center justify-center p-8 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900">
//           <div className="text-center max-w-lg">
//             <h1 className="text-4xl md:text-6xl font-bold mb-8">
//               <span className="bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
//                 Define. Generate. Iterate.
//               </span>
//             </h1>
            
//             <div className="text-xl md:text-2xl h-12 flex items-center justify-center">
//               <span className="bg-gradient-to-r from-pink-400 via-cyan-400 to-purple-400 bg-clip-text text-transparent">
//                 {displayText}
//                 <span className="animate-pulse text-cyan-400">|</span>
//               </span>
//             </div>
//           </div>
//         </section>

//         {/* Right Section - Content */}
//         <section className="w-1/2 flex items-center justify-center p-8 bg-gradient-to-bl from-gray-900 via-gray-800 to-gray-900">
//           <div className="max-w-lg space-y-8">
//             {/* Inspirational Lines */}
//             <div className="space-y-4">
//               <p className="text-lg bg-gradient-to-r from-cyan-300 via-purple-300 to-pink-300 bg-clip-text text-transparent">
//                 Speed up development with dynamic test data.
//               </p>
//               <p className="text-lg bg-gradient-to-r from-purple-300 via-pink-300 to-cyan-300 bg-clip-text text-transparent">
//                 No more hard coded data, just mock it like a pro.
//               </p>
//               <p className="text-lg bg-gradient-to-r from-pink-300 via-cyan-300 to-purple-300 bg-clip-text text-transparent">
//                 Design your schema & Get instant test data.
//               </p>
//             </div>
            
//             {/* Action Buttons */}
//             <div className="space-y-4">
//               <button className="w-full px-8 py-4 border-2 border-cyan-400 rounded-lg text-lg font-semibold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent hover:bg-gray-800 transition-all duration-300 transform hover:scale-105">
//                 Start Generating Data
//               </button>
//               <button className="w-full px-8 py-4 border-2 border-purple-400 rounded-lg text-lg font-semibold bg-gradient-to-r from-purple-400 via-pink-400 to-cyan-400 bg-clip-text text-transparent hover:bg-gray-800 transition-all duration-300 transform hover:scale-105">
//                 View Documentation
//               </button>
//             </div>

//             {/* Feature Cards */}
//             <div className="space-y-4 pt-8">
//               <div className="p-4 rounded-lg border border-gray-700 hover:border-cyan-400 transition-colors">
//                 <div className="flex items-center space-x-3">
//                   <div className="w-10 h-10 rounded-full bg-gradient-to-r from-cyan-400 to-purple-400 flex items-center justify-center">
//                     <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                       <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
//                     </svg>
//                   </div>
//                   <div>
//                     <h3 className="font-semibold bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
//                       Custom Schema
//                     </h3>
//                     <p className="text-sm text-gray-400">Define your own data structure</p>
//                   </div>
//                 </div>
//               </div>

//               <div className="p-4 rounded-lg border border-gray-700 hover:border-purple-400 transition-colors">
//                 <div className="flex items-center space-x-3">
//                   <div className="w-10 h-10 rounded-full bg-gradient-to-r from-purple-400 to-pink-400 flex items-center justify-center">
//                     <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                       <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
//                     </svg>
//                   </div>
//                   <div>
//                     <h3 className="font-semibold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
//                       Lightning Fast
//                     </h3>
//                     <p className="text-sm text-gray-400">Generate thousands of records instantly</p>
//                   </div>
//                 </div>
//               </div>

//               <div className="p-4 rounded-lg border border-gray-700 hover:border-pink-400 transition-colors">
//                 <div className="flex items-center space-x-3">
//                   <div className="w-10 h-10 rounded-full bg-gradient-to-r from-pink-400 to-cyan-400 flex items-center justify-center">
//                     <svg className="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
//                       <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
//                     </svg>
//                   </div>
//                   <div>
//                     <h3 className="font-semibold bg-gradient-to-r from-pink-400 to-cyan-400 bg-clip-text text-transparent">
//                       Developer Friendly
//                     </h3>
//                     <p className="text-sm text-gray-400">Easy API integration & docs</p>
//                   </div>
//                 </div>
//               </div>
//             </div>
//           </div>
//         </section>
//       </main>

//       {/* Footer */}
//       <footer className="bg-gray-900 border-t border-gray-800">
//         <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
//           <div className="grid md:grid-cols-4 gap-8">
//             <div>
//               <h3 className="text-lg font-semibold mb-4 bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
//                 FAUXDB
//               </h3>
//               <p className="text-gray-400 text-sm">
//                 The ultimate fake data generator for developers who need realistic test data.
//               </p>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Product</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors text-sm">Features</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors text-sm">Pricing</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-cyan-400 transition-colors text-sm">API Reference</a></li>
//               </ul>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Support</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-purple-400 transition-colors text-sm">Documentation</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-purple-400 transition-colors text-sm">Guides</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-purple-400 transition-colors text-sm">Contact</a></li>
//               </ul>
//             </div>
            
//             <div>
//               <h4 className="text-md font-semibold mb-4 text-gray-300">Company</h4>
//               <ul className="space-y-2">
//                 <li><a href="#" className="text-gray-400 hover:text-pink-400 transition-colors text-sm">About</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-pink-400 transition-colors text-sm">Blog</a></li>
//                 <li><a href="#" className="text-gray-400 hover:text-pink-400 transition-colors text-sm">Privacy</a></li>
//               </ul>
//             </div>
//           </div>
          
//           <div className="border-t border-gray-800 mt-6 pt-6 text-center">
//             <p className="text-gray-400 text-sm">
//               © 2025 FAUXDB. All rights reserved.
//             </p>
//           </div>
//         </div>
//       </footer>
//     </div>
//   );
// };

// export default FAUXDB_Homepage;




// "use client"

// import { useState, useEffect } from "react"
// import { Button } from "@/components/ui/button"

// const changingPhrases = [
//   "Fake user data..",
//   "Mock database in seconds..",
//   "10,000 users in 2 clicks..",
//   "Data of customized schema..",
// ]

// const useTypewriter = (phrases: string[], speed = 100, deleteSpeed = 50, pauseTime = 2000) => {
//   const [displayText, setDisplayText] = useState("")
//   const [phraseIndex, setPhraseIndex] = useState(0)
//   const [isDeleting, setIsDeleting] = useState(false)

//   useEffect(() => {
//     const currentPhrase = phrases[phraseIndex]

//     const timeout = setTimeout(
//       () => {
//         if (!isDeleting) {
//           if (displayText.length < currentPhrase.length) {
//             setDisplayText(currentPhrase.slice(0, displayText.length + 1))
//           } else {
//             setTimeout(() => setIsDeleting(true), pauseTime)
//           }
//         } else {
//           if (displayText.length > 0) {
//             setDisplayText(displayText.slice(0, -1))
//           } else {
//             setIsDeleting(false)
//             setPhraseIndex((prev) => (prev + 1) % phrases.length)
//           }
//         }
//       },
//       isDeleting ? deleteSpeed : speed,
//     )

//     return () => clearTimeout(timeout)
//   }, [displayText, phraseIndex, isDeleting, phrases, speed, deleteSpeed, pauseTime])

//   return displayText
// }

// export default function Component() {
//   const typewriterText = useTypewriter(changingPhrases)

//   return (
//     <div className="min-h-screen bg-gray-900 text-white">
//       {/* Header */}
//       <header className="bg-gray-900 border-b border-gray-800">
//         <div className="container mx-auto px-6 py-4">
//           <div className="flex items-center justify-between">
//             <div className="text-2xl font-bold bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent">
//               FAUXDB
//             </div>
//             <nav className="hidden md:flex space-x-8">
//               <a
//                 href="#"
//                 className="text-gray-300 hover:bg-gradient-to-r hover:from-blue-400 hover:to-purple-500 hover:bg-clip-text hover:text-transparent transition-all duration-300"
//               >
//                 Features
//               </a>
//               <a
//                 href="#"
//                 className="text-gray-300 hover:bg-gradient-to-r hover:from-green-400 hover:to-blue-500 hover:bg-clip-text hover:text-transparent transition-all duration-300"
//               >
//                 Documentation
//               </a>
//               <a
//                 href="#"
//                 className="text-gray-300 hover:bg-gradient-to-r hover:from-yellow-400 hover:to-red-500 hover:bg-clip-text hover:text-transparent transition-all duration-300"
//               >
//                 Pricing
//               </a>
//               <a
//                 href="#"
//                 className="text-gray-300 hover:bg-gradient-to-r hover:from-pink-400 hover:to-purple-500 hover:bg-clip-text hover:text-transparent transition-all duration-300"
//               >
//                 Contact
//               </a>
//             </nav>
//             <div className="flex space-x-4">
//               <Button
//                 variant="outline"
//                 className="border-2 border-transparent bg-gradient-to-r from-purple-500 to-pink-500 bg-clip-border text-white hover:from-purple-600 hover:to-pink-600 transition-all duration-300"
//                 style={{
//                   borderImage: "linear-gradient(45deg, #8b5cf6, #ec4899, #f59e0b) 1",
//                 }}
//               >
//                 Sign In
//               </Button>
//               <Button
//                 variant="outline"
//                 className="border-2 bg-transparent text-transparent bg-gradient-to-r from-blue-400 via-purple-500 to-pink-500 bg-clip-text hover:shadow-lg hover:shadow-purple-500/25 transition-all duration-300"
//                 style={{
//                   borderImage: "linear-gradient(45deg, #60a5fa, #8b5cf6, #ec4899) 1",
//                 }}
//               >
//                 Get Started
//               </Button>
//             </div>
//           </div>
//         </div>
//       </header>

//       {/* Main Content */}
//       <main className="container mx-auto px-6 py-20">
//         <div className="text-center max-w-4xl mx-auto">
//           {/* Hero Section */}
//           <div className="mb-12">
//             <h1 className="text-6xl md:text-7xl font-bold mb-8 leading-tight">
//               <span className="bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent">
//                 Define. Generate. Iterate.
//               </span>
//             </h1>

//             <div className="text-3xl md:text-4xl font-semibold mb-8 h-16 flex items-center justify-center">
//               <span className="bg-gradient-to-r from-blue-400 via-green-500 to-yellow-500 bg-clip-text text-transparent">
//                 {typewriterText}
//                 <span className="animate-pulse">|</span>
//               </span>
//             </div>

//             <div className="space-y-4 mb-12">
//               <p className="text-xl md:text-2xl bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-600 bg-clip-text text-transparent">
//                 Speed up development with dynamic test data.
//               </p>
//               <p className="text-xl md:text-2xl bg-gradient-to-r from-green-400 via-teal-500 to-blue-600 bg-clip-text text-transparent">
//                 No more hard coded data, just mock it like a pro.
//               </p>
//               <p className="text-xl md:text-2xl bg-gradient-to-r from-yellow-400 via-orange-500 to-red-600 bg-clip-text text-transparent">
//                 Design your schema & Get instant test data.
//               </p>
//             </div>

//             <div className="flex flex-col sm:flex-row gap-6 justify-center items-center">
//               <Button
//                 size="lg"
//                 className="px-8 py-4 text-lg bg-transparent border-2 hover:shadow-xl hover:shadow-purple-500/25 transition-all duration-300"
//                 style={{
//                   borderImage: "linear-gradient(45deg, #8b5cf6, #ec4899, #f59e0b, #10b981) 1",
//                   color: "transparent",
//                   backgroundImage: "linear-gradient(45deg, #8b5cf6, #ec4899, #f59e0b, #10b981)",
//                   backgroundClip: "text",
//                   WebkitBackgroundClip: "text",
//                 }}
//               >
//                 Start Generating Data
//               </Button>
//               <Button
//                 variant="outline"
//                 size="lg"
//                 className="px-8 py-4 text-lg bg-transparent border-2 hover:shadow-xl hover:shadow-blue-500/25 transition-all duration-300"
//                 style={{
//                   borderImage: "linear-gradient(45deg, #60a5fa, #34d399, #fbbf24) 1",
//                   color: "transparent",
//                   backgroundImage: "linear-gradient(45deg, #60a5fa, #34d399, #fbbf24)",
//                   backgroundClip: "text",
//                   WebkitBackgroundClip: "text",
//                 }}
//               >
//                 View Documentation
//               </Button>
//             </div>
//           </div>

//           {/* Features Preview */}
//           <div className="grid md:grid-cols-3 gap-8 mt-20">
//             <div className="p-6 rounded-lg border border-gray-800 hover:border-purple-500/50 transition-all duration-300">
//               <h3 className="text-xl font-semibold mb-4 bg-gradient-to-r from-purple-400 to-pink-500 bg-clip-text text-transparent">
//                 Custom Schemas
//               </h3>
//               <p className="text-gray-400">
//                 Define your data structure with flexible schema definitions. Support for complex nested objects and
//                 arrays.
//               </p>
//             </div>
//             <div className="p-6 rounded-lg border border-gray-800 hover:border-blue-500/50 transition-all duration-300">
//               <h3 className="text-xl font-semibold mb-4 bg-gradient-to-r from-blue-400 to-green-500 bg-clip-text text-transparent">
//                 Instant Generation
//               </h3>
//               <p className="text-gray-400">
//                 Generate thousands of realistic data entries in seconds. Perfect for testing and development workflows.
//               </p>
//             </div>
//             <div className="p-6 rounded-lg border border-gray-800 hover:border-green-500/50 transition-all duration-300">
//               <h3 className="text-xl font-semibold mb-4 bg-gradient-to-r from-green-400 to-yellow-500 bg-clip-text text-transparent">
//                 Multiple Formats
//               </h3>
//               <p className="text-gray-400">
//                 Export your data in JSON, CSV, SQL, or any format you need. Seamless integration with your tools.
//               </p>
//             </div>
//           </div>
//         </div>
//       </main>

//       {/* Footer */}
//       <footer className="bg-gray-900 border-t border-gray-800 mt-20">
//         <div className="container mx-auto px-6 py-12">
//           <div className="grid md:grid-cols-4 gap-8">
//             <div>
//               <div className="text-2xl font-bold mb-4 bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 bg-clip-text text-transparent">
//                 FAUXDB
//               </div>
//               <p className="text-gray-400 mb-4">The ultimate fake data generator for developers and testers.</p>
//             </div>
//             <div>
//               <h4 className="font-semibold mb-4 bg-gradient-to-r from-blue-400 to-purple-500 bg-clip-text text-transparent">
//                 Product
//               </h4>
//               <ul className="space-y-2 text-gray-400">
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Features
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Pricing
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     API
//                   </a>
//                 </li>
//               </ul>
//             </div>
//             <div>
//               <h4 className="font-semibold mb-4 bg-gradient-to-r from-green-400 to-blue-500 bg-clip-text text-transparent">
//                 Resources
//               </h4>
//               <ul className="space-y-2 text-gray-400">
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Documentation
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Examples
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Blog
//                   </a>
//                 </li>
//               </ul>
//             </div>
//             <div>
//               <h4 className="font-semibold mb-4 bg-gradient-to-r from-yellow-400 to-red-500 bg-clip-text text-transparent">
//                 Support
//               </h4>
//               <ul className="space-y-2 text-gray-400">
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Help Center
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Contact
//                   </a>
//                 </li>
//                 <li>
//                   <a href="#" className="hover:text-white transition-colors">
//                     Status
//                   </a>
//                 </li>
//               </ul>
//             </div>
//           </div>
//           <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
//             <p>&copy; 2024 FAUXDB. All rights reserved.</p>
//           </div>
//         </div>
//       </footer>
//     </div>
//   )
// }
